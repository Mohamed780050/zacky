datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Conversation {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  message   String
  response  String
  userId    String
  createdAt DateTime @default(now()) @map("created_at")
}

model ImageMessage {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  imageUrl    String
  sender      String
  userId      String
  createdAt   DateTime @default(now()) @map("created_at")
  description String?
}

model VideoMessage {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  videoUrl    String
  sender      String
  userId      String
  createdAt   DateTime @default(now()) @map("created_at")
  description String?
}

model AudioMessage {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  audioUrl   String
  sender     String
  userId     String
  createdAt  DateTime @default(now()) @map("created_at")
  transcript String?
}

model CodeMessage {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  message     String
  response    String
  userId      String
  createdAt   DateTime @default(now()) @map("created_at")
  description String?
}

model UserLimitation {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  count     Int      @default(0)
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model UserSubscription {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @unique()

  planId            String // your plan identifier (maybe from Square)
  status            String // e.g. "active", "canceled", "past_due"
  startDate         DateTime  @default(now())
  currentPeriodEnd  DateTime?
  cancelAtPeriodEnd Boolean   @default(false)
  cancelledAt       DateTime?

  paymentMethodId String? // maybe a card token or whatever you store

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  SquareCustomerId     String? @unique() @map(name: "square_customer_id")
  SquareSubscriptionId String? @unique() @map(name: "square_subscription_id")
  SquarePriceId        String? @unique() @map(name: "square_price_id")
}

// model UserSubscription {
//   id                    String               @id @default(uuid())
//   user                  User                 @relation(fields: [userId], references: [id])
//   userId                String

//   planId                String               // your plan identifier (maybe from Square)
//   status                String               // e.g. "active", "canceled", "past_due"
//   startDate             DateTime             @default(now())
//   currentPeriodEnd      DateTime?
//   cancelAtPeriodEnd     Boolean              @default(false)
//   cancelledAt           DateTime?

//   paymentMethodId       String?              // maybe a card token or whatever you store

//   createdAt             DateTime             @default(now())
//   updatedAt             DateTime             @updatedAt

//   @@index([userId])
// }
